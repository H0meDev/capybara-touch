
CONFIGURATION = "Debug"
PROJECT_NAME = 'capybara-touch'
APP_TARGET_NAME = 'capybara-touch'

SDK_VERSION = "6.1"
PROJECT_ROOT = File.dirname(__FILE__)
BUILD_DIR = File.join(PROJECT_ROOT, "build")

Kernel.trap("EXIT") do
  kill_simulator
end

def sdk_dir
  "#{xcode_developer_dir}/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator#{SDK_VERSION}.sdk"
end

# Xcode 4.3 stores its /Developer inside /Applications/Xcode.app, Xcode 4.2 stored it in /Developer
def xcode_developer_dir
  `xcode-select -print-path`.strip
end

def build_dir(effective_platform_name)
  File.join(BUILD_DIR, CONFIGURATION + effective_platform_name)
end

def system_or_exit(cmd, stdout = nil)
  puts "Executing #{cmd}"
  cmd += " >#{stdout}" if stdout
  system(cmd) or raise "******** Build failed ********"
end

def kill_simulator
  system %Q[killall -m -KILL "gdb"]
  system %Q[killall -m -KILL "otest"]
  system %Q[killall -m -KILL "iPhone Simulator"]
end

def output_file(target)
  output_dir = if ENV['IS_CI_BOX']
    ENV['CC_BUILD_ARTIFACTS']
  else
    Dir.mkdir(BUILD_DIR) unless File.exists?(BUILD_DIR)
    BUILD_DIR
  end

  output_file = File.join(output_dir, "#{target}.output")
  puts "Output: #{output_file}"
  output_file
end

desc "Build app"
task :build do
  system_or_exit "xcodebuild -project #{PROJECT_NAME}.xcodeproj -target #{APP_TARGET_NAME} -configuration #{CONFIGURATION} -sdk iphonesimulator build", output_file("app_build")
end

require 'tmpdir'

desc "Run app"
task :run => :build do
  kill_simulator
  system_or_exit "ios-sim launch #{File.join(build_dir("-iphonesimulator"), "#{APP_TARGET_NAME}.app")} --sdk 6.1"
end