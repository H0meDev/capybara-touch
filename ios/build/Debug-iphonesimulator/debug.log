2013-06-28 01:02:09.026 capybara-touch[39824:c07] Finished loading!
2013-06-28 01:02:09.027 capybara-touch[39824:c07] Hello?
2013-06-28 01:02:09.028 capybara-touch[39824:c07] ================> Filename /Users/michaelwalker/Library/Application Support/iPhone Simulator/6.1/Applications/64205309-46BC-46AA-B55D-477B64849684/capybara-touch.app/capybara.js
2013-06-28 01:02:09.029 capybara-touch[39824:c07] ================> <43617079 62617261 203d207b 0a20206e 65787449 6e646578 3a20302c 0a20206e 6f646573 3a207b7d 2c0a2020 61747461 63686564 46696c65 733a205b 5d2c0a0a 2020696e 766f6b65 3a206675 6e637469 6f6e2028 29207b0a 20202020 74727920 7b0a2020 20202020 72657475 726e2074 6869735b 43617079 62617261 496e766f 63617469 6f6e2e66 756e6374 696f6e4e 616d655d 2e617070 6c792874 6869732c 20436170 79626172 61496e76 6f636174 696f6e2e 61726775 6d656e74 73293b0a 20202020 7d206361 74636820 28652920 7b0a2020 20202020 43617079 62617261 496e766f 63617469 6f6e2e65 72726f72 203d2065 3b0a2020 20207d0a 20207d2c 0a0a2020 66696e64 58706174 683a2066 756e6374 696f6e20 28787061 74682920 7b0a2020 20207265 7475726e 20746869 732e6669 6e645870 61746852 656c6174 69766554 6f28646f 63756d65 6e742c20 78706174 68293b0a 20207d2c 0a0a2020 66696e64 4373733a 2066756e 6374696f 6e202873 656c6563 746f7229 207b0a20 20202072 65747572 6e207468 69732e66 696e6443 73735265 6c617469 7665546f 28646f63 756d656e 742c2073 656c6563 746f7229 3b0a2020 7d2c0a0a 20206669 6e645870 61746857 69746869 6e3a2066 756e6374 696f6e20 28696e64 65782c20 78706174 6829207b 0a202020 20726574 75726e20 74686973 2e66696e 64587061 74685265 6c617469 7665546f 28746869 732e6e6f 6465735b 696e6465 785d2c20 78706174 68293b0a 20207d2c 0a0a2020 66696e64 43737357 69746869 6e3a2066 756e6374 696f6e20 28696e64 65782c20 73656c65 63746f72 29207b0a 20202020 72657475 726e2074 6869732e 66696e64 43737352 656c6174 69766554 6f287468 69732e6e 6f646573 5b696e64 65785d2c 2073656c 6563746f 72293b0a 20207d2c 0a0a2020 66696e64 58706174 6852656c 61746976 65546f3a 2066756e 6374696f 6e202872 65666572 656e6365 2c207870 61746829 207b0a20 20202076 61722069 74657261 746f7220 3d20646f 63756d65 6e742e65 76616c75 61746528 78706174 682c2072 65666572 656e6365 2c206e75 6c6c2c20 58506174 68526573 756c742e 4f524445 5245445f 4e4f4445 5f495445 5241544f 525f5459 50452c20 6e756c6c 293b0a20 20202076 6172206e 6f64653b 0a202020 20766172 20726573 756c7473 203d205b 5d3b0a20 20202077 68696c65 20286e6f 6465203d 20697465 7261746f 722e6974 65726174 654e6578 74282929 207b0a20 20202020 20746869 732e6e65 7874496e 6465782b 2b3b0a20 20202020 20746869 732e6e6f 6465735b 74686973 2e6e6578 74496e64 65785d20 3d206e6f 64653b0a 20202020 20207265 73756c74 732e7075 73682874 6869732e 6e657874 496e6465 78293b0a 20202020 7d0a2020 20207265 7475726e 20726573 756c7473 2e6a6f69 6e28222c 22293b0a 20207d2c 0a0a2020 66696e64 43737352 656c6174 69766554 6f3a2066 756e6374 696f6e20 28726566 6572656e 63652c20 73656c65 63746f72 29207b0a 20202020 76617220 656c656d 656e7473 203d2072 65666572 656e6365 2e717565 72795365 6c656374 6f72416c 6c287365 6c656374 6f72293b 0a202020 20766172 20726573 756c7473 203d205b 5d3b0a20 20202066 6f722028 76617220 69203d20 303b2069 203c2065 6c656d65 6e74732e 6c656e67 74683b20 692b2b29 207b0a20 20202020 20746869 732e6e65 7874496e 6465782b 2b3b0a20 20202020 20746869 732e6e6f 6465735b 74686973 2e6e6578 74496e64 65785d20 3d20656c 656d656e 74735b69 5d3b0a20 20202020 20726573 756c7473 2e707573 68287468 69732e6e 65787449 6e646578 293b0a20 2020207d 0a202020 20726574 75726e20 72657375 6c74732e 6a6f696e 28222c22 293b0a20 207d2c0a 0a202069 73417474 61636865 643a2066 756e6374 696f6e28 696e6465 7829207b 0a202020 20726574 75726e20 74686973 2e6e6f64 65735b69 6e646578 5d202626 0a202020 20202064 6f63756d 656e742e 6576616c 75617465 2822616e 63657374 6f722d6f 722d7365 6c663a3a 68746d6c 222c2074 6869732e 6e6f6465 735b696e 6465785d 2c206e75 6c6c2c20 58506174 68526573 756c742e 46495253 545f4f52 44455245 445f4e4f 44455f54 5950452c 206e756c 6c292e73 696e676c 654e6f64 6556616c 75652021 3d206e75 6c6c3b0a 20207d2c 0a0a2020 74657874 3a206675 6e637469 6f6e2028 696e6465 7829207b 0a202020 20766172 206e6f64 65203d20 74686973 2e6e6f64 65735b69 6e646578 5d3b0a20 20202076 61722074 79706520 3d20286e 6f64652e 74797065 207c7c20 6e6f6465 2e746167 4e616d65 292e746f 4c6f7765 72436173 6528293b 0a202020 20696620 28747970 65203d3d 20227465 78746172 65612229 207b0a20 20202020 20726574 75726e20 6e6f6465 2e696e6e 65724854 4d4c3b0a 20202020 7d20656c 7365207b 0a202020 20202072 65747572 6e206e6f 64652e69 6e6e6572 54657874 207c7c20 6e6f6465 2e746578 74436f6e 74656e74 3b0a2020 20207d0a 20207d2c 0a0a2020 616c6c54 6578743a 2066756e 6374696f 6e202869 6e646578 29207b0a 20202020 76617220 6e6f6465 203d2074 6869732e 6e6f6465 735b696e 6465785d 3b0a2020 20207265 7475726e 206e6f64 652e7465 7874436f 6e74656e 743b0a20 207d2c0a 0a202061 74747269 62757465 3a206675 6e637469 6f6e2028 696e6465 782c206e 616d6529 207b0a20 20202073 77697463 68286e61 6d652920 7b0a2020 20206361 73652027 63686563 6b656427 3a0a2020 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e636865 636b6564 3b0a2020 20202020 62726561 6b3b0a0a 20202020 63617365 20276469 7361626c 6564273a 0a202020 20202072 65747572 6e207468 69732e6e 6f646573 5b696e64 65785d2e 64697361 626c6564 3b0a2020 20202020 62726561 6b3b0a0a 20202020 63617365 20276d75 6c746970 6c65273a 0a202020 20202072 65747572 6e207468 69732e6e 6f646573 5b696e64 65785d2e 6d756c74 69706c65 3b0a2020 20202020 62726561 6b3b0a0a 20202020 64656661 756c743a 0a202020 20202072 65747572 6e207468 69732e6e 6f646573 5b696e64 65785d2e 67657441 74747269 62757465 286e616d 65293b0a 20202020 7d0a2020 7d2c0a0a 20206861 73417474 72696275 74653a20 66756e63 74696f6e 28696e64 65782c20 6e616d65 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e686173 41747472 69627574 65286e61 6d65293b 0a20207d 2c0a0a20 20706174 683a2066 756e6374 696f6e28 696e6465 7829207b 0a202020 20726574 75726e20 222f2220 2b207468 69732e67 65745850 6174684e 6f646528 74686973 2e6e6f64 65735b69 6e646578 5d292e6a 6f696e28 222f2229 3b0a2020 7d2c0a0a 20206765 74585061 74684e6f 64653a20 66756e63 74696f6e 286e6f64 652c2070 61746829 207b0a20 20202070 61746820 3d207061 7468207c 7c205b5d 3b0a2020 20206966 20286e6f 64652e70 6172656e 744e6f64 6529207b 0a202020 20202070 61746820 3d207468 69732e67 65745850 6174684e 6f646528 6e6f6465 2e706172 656e744e 6f64652c 20706174 68293b0a 20202020 7d0a0a20 20202076 61722066 69727374 203d206e 6f64653b 0a202020 20776869 6c652028 66697273 742e7072 6576696f 75735369 626c696e 67290a20 20202020 20666972 7374203d 20666972 73742e70 72657669 6f757353 69626c69 6e673b0a 0a202020 20766172 20636f75 6e74203d 20303b0a 20202020 76617220 696e6465 78203d20 303b0a20 20202076 61722069 74657220 3d206669 7273743b 0a202020 20776869 6c652028 69746572 29207b0a 20202020 20206966 20286974 65722e6e 6f646554 79706520 3d3d2031 20262620 69746572 2e6e6f64 654e616d 65203d3d 206e6f64 652e6e6f 64654e61 6d65290a 20202020 20202020 636f756e 742b2b3b 0a202020 20202069 66202869 7465722e 69735361 6d654e6f 6465286e 6f646529 290a2020 20202020 20202069 6e646578 203d2063 6f756e74 3b0a2020 20202020 69746572 203d2069 7465722e 6e657874 5369626c 696e673b 0a202020 20202063 6f6e7469 6e75653b 0a202020 207d0a0a 20202020 69662028 6e6f6465 2e6e6f64 65547970 65203d3d 2031290a 20202020 20207061 74682e70 75736828 6e6f6465 2e6e6f64 654e616d 652e746f 4c6f7765 72436173 65282920 2b20286e 6f64652e 6964203f 20225b40 69643d27 222b6e6f 64652e69 642b2227 5d22203a 20636f75 6e74203e 2031203f 20225b22 2b696e64 65782b22 5d22203a 20272729 293b0a0a 20202020 72657475 726e2070 6174683b 0a20207d 2c0a0a20 20746167 4e616d65 3a206675 6e637469 6f6e2869 6e646578 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e746167 4e616d65 2e746f4c 6f776572 43617365 28293b0a 20207d2c 0a0a2020 7375626d 69743a20 66756e63 74696f6e 28696e64 65782920 7b0a2020 20207265 7475726e 20746869 732e6e6f 6465735b 696e6465 785d2e73 75626d69 7428293b 0a20207d 2c0a0a20 20636c69 636b5465 73743a20 66756e63 74696f6e 286e6f64 652c2070 6f732920 7b0a2020 20207661 7220656c 203d2064 6f63756d 656e742e 656c656d 656e7446 726f6d50 6f696e74 28706f73 2e72656c 61746976 65582c20 706f732e 72656c61 74697665 59293b0a 0a202020 20776869 6c652028 656c2920 7b0a2020 20202020 69662028 656c203d 3d3d206e 6f646529 0a202020 20202020 20726574 75726e20 43617079 62617261 496e766f 63617469 6f6e2e63 6c69636b 54657374 286e6f64 652c2070 6f732e61 62736f6c 75746558 2c20706f 732e6162 736f6c75 74655929 3b0a2020 20202020 656c7365 0a202020 20202020 20656c20 3d20656c 2e706172 656e744e 6f64653b 0a202020 207d0a0a 20202020 72657475 726e2066 616c7365 3b0a2020 7d2c0a0a 2020636c 69636b50 6f736974 696f6e3a 2066756e 6374696f 6e286e6f 64652920 7b0a2020 20207661 72207265 63747320 3d206e6f 64652e67 6574436c 69656e74 52656374 7328293b 0a202020 20766172 20726563 743b0a0a 20202020 666f7220 28766172 2069203d 20303b20 69203c20 72656374 732e6c65 6e677468 3b20692b 2b29207b 0a202020 20202072 65637420 3d207265 6374735b 695d3b0a 20202020 20206966 20287265 63742e77 69647468 203e2030 20262620 72656374 2e686569 67687420 3e203029 0a202020 20202020 20726574 75726e20 43617079 62617261 496e766f 63617469 6f6e2e63 6c69636b 506f7369 74696f6e 286e6f64 652c2072 6563742e 6c656674 2c207265 63742e74 6f702c20 72656374 2e776964 74682c20 72656374 2e686569 67687429 3b0a2020 20207d0a 20207d2c 0a0a2020 636c6963 6b3a2066 756e6374 696f6e20 28696e64 65782c20 61637469 6f6e2920 7b0a2020 20207661 72206e6f 6465203d 20746869 732e6e6f 6465735b 696e6465 785d3b0a 20202020 6e6f6465 2e736372 6f6c6c49 6e746f56 69657749 664e6565 64656428 293b0a0a 20202020 76617220 706f7320 3d207468 69732e63 6c69636b 506f7369 74696f6e 286e6f64 65293b0a 0a202020 20696620 28706f73 20262620 74686973 2e636c69 636b5465 7374286e 6f64652c 20706f73 29290a20 20202020 20616374 696f6e28 706f732e 6162736f 6c757465 582c2070 6f732e61 62736f6c 75746559 293b0a20 20202065 6c73650a 20202020 20207468 726f7720 6e657720 43617079 62617261 2e436c69 636b4661 696c6564 28746869 732e7061 74682869 6e646578 292c2070 6f73293b 0a20207d 2c0a0a20 206c6566 74436c69 636b3a20 66756e63 74696f6e 2028696e 64657829 207b0a20 20202074 6869732e 636c6963 6b28696e 6465782c 20436170 79626172 61496e76 6f636174 696f6e2e 6c656674 436c6963 6b293b0a 20207d2c 0a0a2020 646f7562 6c65436c 69636b3a 2066756e 6374696f 6e28696e 64657829 207b0a20 20202074 6869732e 636c6963 6b28696e 6465782c 20436170 79626172 61496e76 6f636174 696f6e2e 6c656674 436c6963 6b293b0a 20202020 74686973 2e636c69 636b2869 6e646578 2c204361 70796261 7261496e 766f6361 74696f6e 2e646f75 626c6543 6c69636b 293b0a20 207d2c0a 0a202072 69676874 436c6963 6b3a2066 756e6374 696f6e28 696e6465 7829207b 0a202020 20746869 732e636c 69636b28 696e6465 782c2043 61707962 61726149 6e766f63 6174696f 6e2e7269 67687443 6c69636b 293b0a20 207d2c0a 0a202068 6f766572 3a206675 6e637469 6f6e2028 696e6465 7829207b 0a202020 20766172 206e6f64 65203d20 74686973 2e6e6f64 65735b69 6e646578 5d3b0a20 2020206e 6f64652e 7363726f 6c6c496e 746f5669 65774966 4e656564 65642829 3b0a0a20 20202076 61722070 6f73203d 20746869 732e636c 69636b50 6f736974 696f6e28 6e6f6465 293b0a20 20202069 66202870 6f73290a 20202020 20204361 70796261 7261496e 766f6361 74696f6e 2e686f76 65722870 6f732e61 62736f6c 75746558 2c20706f 732e6162 736f6c75 74655929 3b0a2020 7d2c0a0a 20207472 69676765 723a2066 756e6374 696f6e20 28696e64 65782c20 6576656e 744e616d 6529207b 0a202020 20766172 20657665 6e744f62 6a656374 203d2064 6f63756d 656e742e 63726561 74654576 656e7428 2248544d 4c457665 6e747322 293b0a20 20202065 76656e74 4f626a65 63742e69 6e697445 76656e74 28657665 6e744e61 6d652c20 74727565 2c207472 7565293b 0a202020 20746869 732e6e6f 6465735b 696e6465 785d2e64 69737061 74636845 76656e74 28657665 6e744f62 6a656374 293b0a20 207d2c0a 0a202076 69736962 6c653a20 66756e63 74696f6e 2028696e 64657829 207b0a20 20202076 61722065 6c656d65 6e74203d 20746869 732e6e6f 6465735b 696e6465 785d3b0a 20202020 7768696c 65202865 6c656d65 6e742920 7b0a2020 20202020 76617220 7374796c 65203d20 656c656d 656e742e 6f776e65 72446f63 756d656e 742e6465 6661756c 74566965 772e6765 74436f6d 70757465 64537479 6c652865 6c656d65 6e742c20 6e756c6c 293b0a20 20202020 20696620 28737479 6c652e67 65745072 6f706572 74795661 6c756528 22646973 706c6179 2229203d 3d20276e 6f6e6527 207c7c20 7374796c 652e6765 7450726f 70657274 7956616c 75652822 76697369 62696c69 74792229 203d3d20 27686964 64656e27 290a2020 20202020 20207265 7475726e 2066616c 73653b0a 0a202020 20202065 6c656d65 6e74203d 20656c65 6d656e74 2e706172 656e7445 6c656d65 6e743b0a 20202020 7d0a2020 20207265 7475726e 20747275 653b0a20 207d2c0a 0a202073 656c6563 7465643a 2066756e 6374696f 6e202869 6e646578 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e73656c 65637465 643b0a20 207d2c0a 0a202076 616c7565 3a206675 6e637469 6f6e2869 6e646578 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e76616c 75653b0a 20207d2c 0a0a2020 67657449 6e6e6572 48544d4c 3a206675 6e637469 6f6e2869 6e646578 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e696e6e 65724854 4d4c3b0a 20207d2c 0a0a2020 73657449 6e6e6572 48544d4c 3a206675 6e637469 6f6e2869 6e646578 2c207661 6c756529 207b0a20 20202074 6869732e 6e6f6465 735b696e 6465785d 2e696e6e 65724854 4d4c203d 2076616c 75653b0a 20202020 72657475 726e2074 7275653b 0a20207d 2c0a0a20 20736574 3a206675 6e637469 6f6e2028 696e6465 782c2076 616c7565 29207b0a 20202020 76617220 6c656e67 74682c20 6d61784c 656e6774 682c206e 6f64652c 20737472 696e6465 782c2074 65787454 79706573 2c207479 70653b0a 0a202020 206e6f64 65203d20 74686973 2e6e6f64 65735b69 6e646578 5d3b0a20 20202074 79706520 3d20286e 6f64652e 74797065 207c7c20 6e6f6465 2e746167 4e616d65 292e746f 4c6f7765 72436173 6528293b 0a202020 20746578 74547970 6573203d 205b2265 6d61696c 222c2022 6e756d62 6572222c 20227061 7373776f 7264222c 20227365 61726368 222c2022 74656c22 2c202274 65787422 2c202274 65787461 72656122 2c202275 726c225d 3b0a0a20 20202069 66202874 65787454 79706573 2e696e64 65784f66 28747970 65292021 3d202d31 29207b0a 20202020 20207468 69732e66 6f637573 28696e64 6578293b 0a0a2020 20202020 6d61784c 656e6774 68203d20 74686973 2e617474 72696275 74652869 6e646578 2c20226d 61786c65 6e677468 22293b0a 20202020 20206966 20286d61 784c656e 67746820 26262076 616c7565 2e6c656e 67746820 3e206d61 784c656e 67746829 207b0a20 20202020 2020206c 656e6774 68203d20 6d61784c 656e6774 683b0a20 20202020 207d2065 6c736520 7b0a2020 20202020 20206c65 6e677468 203d2076 616c7565 2e6c656e 6774683b 0a202020 2020207d 0a0a2020 20202020 69662028 216e6f64 652e7265 61644f6e 6c79290a 20202020 20202020 6e6f6465 2e76616c 7565203d 2022223b 0a0a2020 20202020 666f7220 28737472 696e6465 78203d20 303b2073 7472696e 64657820 3c206c65 6e677468 3b207374 72696e64 65782b2b 29207b0a 20202020 20202020 43617079 62617261 496e766f 63617469 6f6e2e6b 65797072 65737328 76616c75 655b7374 72696e64 65785d29 3b0a2020 20202020 7d0a0a20 2020207d 20656c73 65206966 20287479 7065203d 3d3d2022 63686563 6b626f78 22207c7c 20747970 65203d3d 3d202272 6164696f 2229207b 0a202020 20202069 6620286e 6f64652e 63686563 6b656420 213d2028 76616c75 65203d3d 3d202274 72756522 2929207b 0a202020 20202020 20746869 732e6c65 6674436c 69636b28 696e6465 78293b0a 20202020 20207d0a 0a202020 207d2065 6c736520 69662028 74797065 203d3d3d 20226669 6c652229 207b0a20 20202020 20746869 732e6174 74616368 65644669 6c657320 3d204172 7261792e 70726f74 6f747970 652e736c 6963652e 63616c6c 28617267 756d656e 74732c20 31293b0a 20202020 20207468 69732e6c 65667443 6c69636b 28696e64 6578293b 0a0a2020 20207d20 656c7365 207b0a20 20202020 206e6f64 652e7661 6c756520 3d207661 6c75653b 0a202020 207d0a20 207d2c0a 0a202066 6f637573 3a206675 6e637469 6f6e2869 6e646578 29207b0a 20202020 74686973 2e6e6f64 65735b69 6e646578 5d2e666f 63757328 293b0a20 207d2c0a 0a202073 656c6563 744f7074 696f6e3a 2066756e 6374696f 6e28696e 64657829 207b0a20 20202074 6869732e 6e6f6465 735b696e 6465785d 2e73656c 65637465 64203d20 74727565 3b0a2020 20207468 69732e74 72696767 65722869 6e646578 2c202263 68616e67 6522293b 0a20207d 2c0a0a20 20756e73 656c6563 744f7074 696f6e3a 2066756e 6374696f 6e28696e 64657829 207b0a20 20202074 6869732e 6e6f6465 735b696e 6465785d 2e73656c 65637465 64203d20 66616c73 653b0a20 20202074 6869732e 74726967 67657228 696e6465 782c2022 6368616e 67652229 3b0a2020 7d2c0a0a 20206365 6e746572 506f7369 74696f6e 3a206675 6e637469 6f6e2865 6c656d65 6e742920 7b0a2020 20207468 69732e72 65666c6f 7728656c 656d656e 74293b0a 20202020 76617220 72656374 203d2065 6c656d65 6e742e67 6574426f 756e6469 6e67436c 69656e74 52656374 28293b0a 20202020 76617220 706f7369 74696f6e 203d207b 0a202020 20202078 3a207265 63742e77 69647468 202f2032 2c0a2020 20202020 793a2072 6563742e 68656967 6874202f 20320a20 2020207d 3b0a2020 2020646f 207b0a20 20202020 20202070 6f736974 696f6e2e 78202b3d 20656c65 6d656e74 2e6f6666 7365744c 6566743b 0a202020 20202020 20706f73 6974696f 6e2e7920 2b3d2065 6c656d65 6e742e6f 66667365 74546f70 3b0a2020 20207d20 7768696c 65202828 656c656d 656e7420 3d20656c 656d656e 742e6f66 66736574 50617265 6e742929 3b0a2020 2020706f 73697469 6f6e2e78 203d204d 6174682e 666c6f6f 7228706f 73697469 6f6e2e78 293b0a20 20202070 6f736974 696f6e2e 79203d20 4d617468 2e666c6f 6f722870 6f736974 696f6e2e 79293b0a 0a202020 20726574 75726e20 706f7369 74696f6e 3b0a2020 7d2c0a0a 20207265 666c6f77 3a206675 6e637469 6f6e2865 6c656d65 6e742c20 666f7263 6529207b 0a202020 20696620 28666f72 6365207c 7c20656c 656d656e 742e6f66 66736574 57696474 68203d3d 3d203029 207b0a20 20202020 20766172 2070726f 702c206f 6c645374 796c6520 3d207b7d 2c206e65 77537479 6c65203d 207b706f 73697469 6f6e3a20 22616273 6f6c7574 65222c20 76697369 62696c69 7479203a 20226869 6464656e 222c2064 6973706c 61793a20 22626c6f 636b2220 7d3b0a20 20202020 20666f72 20287072 6f702069 6e206e65 77537479 6c652920 207b0a20 20202020 2020206f 6c645374 796c655b 70726f70 5d203d20 656c656d 656e742e 7374796c 655b7072 6f705d3b 0a202020 20202020 20656c65 6d656e74 2e737479 6c655b70 726f705d 203d206e 65775374 796c655b 70726f70 5d3b0a20 20202020 207d0a20 20202020 202f2f20 666f7263 65207265 666c6f77 0a202020 20202065 6c656d65 6e742e6f 66667365 74576964 74683b0a 20202020 2020656c 656d656e 742e6f66 66736574 48656967 68743b0a 20202020 2020666f 72202870 726f7020 696e206f 6c645374 796c6529 0a202020 20202020 20656c65 6d656e74 2e737479 6c655b70 726f705d 203d206f 6c645374 796c655b 70726f70 5d3b0a20 2020207d 0a20207d 2c0a0a20 20647261 67546f3a 2066756e 6374696f 6e202869 6e646578 2c207461 72676574 496e6465 7829207b 0a202020 20766172 20656c65 6d656e74 203d2074 6869732e 6e6f6465 735b696e 6465785d 2c207461 72676574 203d2074 6869732e 6e6f6465 735b7461 72676574 496e6465 785d3b0a 20202020 76617220 706f7369 74696f6e 203d2074 6869732e 63656e74 6572506f 73697469 6f6e2865 6c656d65 6e74293b 0a202020 20766172 206f7074 696f6e73 203d207b 0a202020 20202063 6c69656e 74583a20 706f7369 74696f6e 2e782c0a 20202020 2020636c 69656e74 593a2070 6f736974 696f6e2e 790a2020 20207d3b 0a202020 20766172 206d6f75 73655472 69676765 72203d20 66756e63 74696f6e 28657665 6e744e61 6d652c20 6f707469 6f6e7329 207b0a20 20202020 20766172 20657665 6e744f62 6a656374 203d2064 6f63756d 656e742e 63726561 74654576 656e7428 224d6f75 73654576 656e7473 22293b0a 20202020 20206576 656e744f 626a6563 742e696e 69744d6f 75736545 76656e74 28657665 6e744e61 6d652c20 74727565 2c207472 75652c20 77696e64 6f772c20 302c2030 2c20302c 206f7074 696f6e73 2e636c69 656e7458 207c7c20 302c206f 7074696f 6e732e63 6c69656e 7459207c 7c20302c 2066616c 73652c20 66616c73 652c2066 616c7365 2c206661 6c73652c 20302c20 6e756c6c 293b0a20 20202020 20656c65 6d656e74 2e646973 70617463 68457665 6e742865 76656e74 4f626a65 6374293b 0a202020 207d3b0a 20202020 6d6f7573 65547269 67676572 28276d6f 75736564 6f776e27 2c206f70 74696f6e 73293b0a 20202020 6f707469 6f6e732e 636c6965 6e745820 2b3d2031 3b0a2020 20206f70 74696f6e 732e636c 69656e74 59202b3d 20313b0a 20202020 6d6f7573 65547269 67676572 28276d6f 7573656d 6f766527 2c206f70 74696f6e 73293b0a 0a202020 20706f73 6974696f 6e203d20 74686973 2e63656e 74657250 6f736974 696f6e28 74617267 6574293b 0a202020 206f7074 696f6e73 203d207b 0a202020 20202063 6c69656e 74583a20 706f7369 74696f6e 2e782c0a 20202020 2020636c 69656e74 593a2070 6f736974 696f6e2e 790a2020 20207d3b 0a202020 206d6f75 73655472 69676765 7228276d 6f757365 6d6f7665 272c206f 7074696f 6e73293b 0a202020 206d6f75 73655472 69676765 7228276d 6f757365 7570272c 206f7074 696f6e73 293b0a20 207d2c0a 0a202065 7175616c 733a2066 756e6374 696f6e28 696e6465 782c2074 61726765 74496e64 65782920 7b0a2020 20207265 7475726e 20746869 732e6e6f 6465735b 696e6465 785d203d 3d3d2074 6869732e 6e6f6465 735b7461 72676574 496e6465 785d3b0a 20207d0a 7d3b0a0a 43617079 62617261 2e436c69 636b4661 696c6564 203d2066 756e6374 696f6e28 70617468 2c20706f 73697469 6f6e2920 7b0a2020 74686973 2e6e616d 65203d20 27436170 79626172 612e436c 69636b46 61696c65 64273b0a 20207468 69732e6d 65737361 6765203d 20274661 696c6564 20746f20 636c6963 6b20656c 656d656e 74202720 2b207061 74683b0a 20206966 2028706f 73697469 6f6e290a 20202020 74686973 2e6d6573 73616765 202b3d20 27206174 20706f73 6974696f 6e202720 2b20706f 73697469 6f6e5b22 6162736f 6c757465 58225d20 2b20272c 2027202b 20706f73 6974696f 6e5b2261 62736f6c 75746559 225d3b0a 2020656c 73650a20 20202074 6869732e 6d657373 61676520 2b3d2027 20617420 756e6b6e 6f776e20 706f7369 74696f6e 273b0a7d 3b0a4361 70796261 72612e43 6c69636b 4661696c 65642e70 726f746f 74797065 203d206e 65772045 72726f72 28293b0a 43617079 62617261 2e436c69 636b4661 696c6564 2e70726f 746f7479 70652e63 6f6e7374 72756374 6f72203d 20436170 79626172 612e436c 69636b46 61696c65 643b0a>
2013-06-28 01:02:09.033 capybara-touch[39824:c07] ================> Capybara = {
  nextIndex: 0,
  nodes: {},
  attachedFiles: [],

  invoke: function () {
    try {
      return this[CapybaraInvocation.functionName].apply(this, CapybaraInvocation.arguments);
    } catch (e) {
      CapybaraInvocation.error = e;
    }
  },

  findXpath: function (xpath) {
    return this.findXpathRelativeTo(document, xpath);
  },

  findCss: function (selector) {
    return this.findCssRelativeTo(document, selector);
  },

  findXpathWithin: function (index, xpath) {
    return this.findXpathRelativeTo(this.nodes[index], xpath);
  },

  findCssWithin: function (index, selector) {
    return this.findCssRelativeTo(this.nodes[index], selector);
  },

  findXpathRelativeTo: function (reference, xpath) {
    var iterator = document.evaluate(xpath, reference, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
    var node;
    var results = [];
    while (node = iterator.iterateNext()) {
      this.nextIndex++;
      this.nodes[this.nextIndex] = node;
      results.push(this.nextIndex);
    }
    return results.join(",");
  },

  findCssRelativeTo: function (reference, selector) {
    var elements = reference.querySelectorAll(selector);
    var results = [];
    for (var i = 0; i < elements.length; i++) {
      this.nextIndex++;
      this.nodes[this.nextIndex] = elements[i];
      results.push(this.nextIndex);
    }
    return results.join(",");
  },

  isAttached: function(index) {
    return this.nodes[index] &&
      document.evaluate("ancestor-or-self::html", this.nodes[index], null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue != null;
  },

  text: function (index) {
    var node = this.nodes[index];
    var type = (node.type || node.tagName).toLowerCase();
    if (type == "textarea") {
      return node.innerHTML;
    } else {
      return node.innerText || node.textContent;
    }
  },

  allText: function (index) {
    var node = this.nodes[index];
    return node.textContent;
  },

  attribute: function (index, name) {
    switch(name) {
    case 'checked':
      return this.nodes[index].checked;
      break;

    case 'disabled':
      return this.nodes[index].disabled;
      break;

    case 'multiple':
      return this.nodes[index].multiple;
      break;

    default:
      return this.nodes[index].getAttribute(name);
    }
  },

  hasAttribute: function(index, name) {
    return this.nodes[index].hasAttribute(name);
  },

  path: function(index) {
    return "/" + this.getXPathNode(this.nodes[index]).join("/");
  },

  getXPathNode: function(node, path) {
    path = path || [];
    if (node.parentNode) {
      path = this.getXPathNode(node.parentNode, path);
    }

    var first = node;
    while (first.previousSibling)
      first = first.previousSibling;

    var count = 0;
    var index = 0;
    var iter = first;
    while (iter) {
      if (iter.nodeType == 1 && iter.nodeName == node.nodeName)
        count++;
      if (iter.isSameNode(node))
         index = count;
      iter = iter.nextSibling;
      continue;
    }

    if (node.nodeType == 1)
      path.push(node.nodeName.toLowerCase() + (node.id ? "[@id='"+node.id+"']" : count > 1 ? "["+index+"]" : ''));

    return path;
  },

  tagName: function(index) {
    return this.nodes[index].tagName.toLowerCase();
  },

  submit: function(index) {
    return this.nodes[index].submit();
  },

  clickTest: function(node, pos) {
    var el = document.elementFromPoint(pos.relativeX, pos.relativeY);

    while (el) {
      if (el === node)
        return CapybaraInvocation.clickTest(node, pos.absoluteX, pos.absoluteY);
      else
        el = el.parentNode;
    }

    return false;
  },

  clickPosition: function(node) {
    var rects = node.getClientRects();
    var rect;

    for (var i = 0; i < rects.length; i++) {
      rect = rects[i];
      if (rect.width > 0 && rect.height > 0)
        return CapybaraInvocation.clickPosition(node, rect.left, rect.top, rect.width, rect.height);
    }
  },

  click: function (index, action) {
    var node = this.nodes[index];
    node.scrollIntoViewIfNeeded();

    var pos = this.clickPosition(node);

    if (pos && this.clickTest(node, pos))
      action(pos.absoluteX, pos.absoluteY);
    else
      throw new Capybara.ClickFailed(this.path(index), pos);
  },

  leftClick: function (index) {
    this.click(index, CapybaraInvocation.leftClick);
  },

  doubleClick: function(index) {
    this.click(index, CapybaraInvocation.leftClick);
    this.click(index, CapybaraInvocation.doubleClick);
  },

  rightClick: function(index) {
    this.click(index, CapybaraInvocation.rightClick);
  },

  hover: function (index) {
    var node = this.nodes[index];
    node.scrollIntoViewIfNeeded();

    var pos = this.clickPosition(node);
    if (pos)
      CapybaraInvocation.hover(pos.absoluteX, pos.absoluteY);
  },

  trigger: function (index, eventName) {
    var eventObject = document.createEvent("HTMLEvents");
    eventObject.initEvent(eventName, true, true);
    this.nodes[index].dispatchEvent(eventObject);
  },

  visible: function (index) {
    var element = this.nodes[index];
    while (element) {
      var style = element.ownerDocument.defaultView.getComputedStyle(element, null);
      if (style.getPropertyValue("display") == 'none' || style.getPropertyValue("visibility") == 'hidden')
        return false;

      element = element.parentElement;
    }
    return true;
  },

  selected: function (index) {
    return this.nodes[index].selected;
  },

  value: function(index) {
    return this.nodes[index].value;
  },

  getInnerHTML: function(index) {
    return this.nodes[index].innerHTML;
  },

  setInnerHTML: function(index, value) {
    this.nodes[index].innerHTML = value;
    return true;
  },

  set: function (index, value) {
    var length, maxLength, node, strindex, textTypes, type;

    node = this.nodes[index];
    type = (node.type || node.tagName).toLowerCase();
    textTypes = ["email", "number", "password", "search", "tel", "text", "textarea", "url"];

    if (textTypes.indexOf(type) != -1) {
      this.focus(index);

      maxLength = this.attribute(index, "maxlength");
      if (maxLength && value.length > maxLength) {
        length = maxLength;
      } else {
        length = value.length;
      }

      if (!node.readOnly)
        node.value = "";

      for (strindex = 0; strindex < length; strindex++) {
        CapybaraInvocation.keypress(value[strindex]);
      }

    } else if (type === "checkbox" || type === "radio") {
      if (node.checked != (value === "true")) {
        this.leftClick(index);
      }

    } else if (type === "file") {
      this.attachedFiles = Array.prototype.slice.call(arguments, 1);
      this.leftClick(index);

    } else {
      node.value = value;
    }
  },

  focus: function(index) {
    this.nodes[index].focus();
  },

  selectOption: function(index) {
    this.nodes[index].selected = true;
    this.trigger(index, "change");
  },

  unselectOption: function(index) {
    this.nodes[index].selected = false;
    this.trigger(index, "change");
  },

  centerPosition: function(element) {
    this.reflow(element);
    var rect = element.getBoundingClientRect();
    var position = {
      x: rect.width / 2,
      y: rect.height / 2
    };
    do {
        position.x += element.offsetLeft;
        position.y += element.offsetTop;
    } while ((element = element.offsetParent));
    position.x = Math.floor(position.x);
    position.y = Math.floor(position.y);

    return position;
  },

  reflow: function(element, force) {
    if (force || element.offsetWidth === 0) {
      var prop, oldStyle = {}, newStyle = {position: "absolute", visibility : "hidden", display: "block" };
      for (prop in newStyle)  {
        oldStyle[prop] = element.style[prop];
        element.style[prop] = newStyle[prop];
      }
      // force reflow
      element.offsetWidth;
      element.offsetHeight;
      for (prop in oldStyle)
        element.style[prop] = oldStyle[prop];
    }
  },

  dragTo: function (index, targetIndex) {
    var element = this.nodes[index], target = this.nodes[targetIndex];
    var position = this.centerPosition(element);
    var options = {
      clientX: position.x,
      clientY: position.y
    };
    var mouseTrigger = function(eventName, options) {
      var eventObject = document.createEvent("MouseEvents");
      eventObject.initMouseEvent(eventName, true, true, window, 0, 0, 0, options.clientX || 0, options.clientY || 0, false, false, false, false, 0, null);
      element.dispatchEvent(eventObject);
    };
    mouseTrigger('mousedown', options);
    options.clientX += 1;
    options.clientY += 1;
    mouseTrigger('mousemove', options);

    position = this.centerPosition(target);
    options = {
      clientX: position.x,
      clientY: position.y
    };
    mouseTrigger('mousemove', options);
    mouseTrigger('mouseup', options);
  },

  equals: function(index, targetIndex) {
    return this.nodes[index] === this.nodes[targetIndex];
  }
};

Capybara.ClickFailed = function(path, position) {
  this.name = 'Capybara.ClickFailed';
  this.message = 'Failed to click element ' + path;
  if (position)
    this.message += ' at position ' + position["absoluteX"] + ', ' + position["absoluteY"];
  else
    this.message += ' at unknown position';
};
Capybara.ClickFailed.prototype = new Error();
Capybara.ClickFailed.prototype.constructor = Capybara.ClickFailed;
2013-06-28 01:02:09.035 capybara-touch[39824:c07] ================> HI MOM
2013-06-28 01:02:09.036 capybara-touch[39824:c07] ================> function (path, position) {
  this.name = 'Capybara.ClickFailed';
  this.message = 'Failed to click element ' + path;
  if (position)
    this.message += ' at position ' + position["absoluteX"] + ', ' + position["absoluteY"];
  else
    this.message += ' at unknown position';
}
2013-06-28 01:02:09.037 capybara-touch[39824:c07] listening on port: 9292
2013-06-28 01:02:46.639 capybara-touch[40028:c07] Finished loading!
2013-06-28 01:02:46.640 capybara-touch[40028:c07] Hello?
2013-06-28 01:02:46.641 capybara-touch[40028:c07] ================> Filename /Users/michaelwalker/Library/Application Support/iPhone Simulator/6.1/Applications/64205309-46BC-46AA-B55D-477B64849684/capybara-touch.app/capybara.js
2013-06-28 01:02:46.642 capybara-touch[40028:c07] ================> <43617079 62617261 203d207b 0a20206e 65787449 6e646578 3a20302c 0a20206e 6f646573 3a207b7d 2c0a2020 61747461 63686564 46696c65 733a205b 5d2c0a0a 2020696e 766f6b65 3a206675 6e637469 6f6e2028 29207b0a 20202020 74727920 7b0a2020 20202020 72657475 726e2074 6869735b 43617079 62617261 496e766f 63617469 6f6e2e66 756e6374 696f6e4e 616d655d 2e617070 6c792874 6869732c 20436170 79626172 61496e76 6f636174 696f6e2e 61726775 6d656e74 73293b0a 20202020 7d206361 74636820 28652920 7b0a2020 20202020 43617079 62617261 496e766f 63617469 6f6e2e65 72726f72 203d2065 3b0a2020 20207d0a 20207d2c 0a0a2020 66696e64 58706174 683a2066 756e6374 696f6e20 28787061 74682920 7b0a2020 20207265 7475726e 20746869 732e6669 6e645870 61746852 656c6174 69766554 6f28646f 63756d65 6e742c20 78706174 68293b0a 20207d2c 0a0a2020 66696e64 4373733a 2066756e 6374696f 6e202873 656c6563 746f7229 207b0a20 20202072 65747572 6e207468 69732e66 696e6443 73735265 6c617469 7665546f 28646f63 756d656e 742c2073 656c6563 746f7229 3b0a2020 7d2c0a0a 20206669 6e645870 61746857 69746869 6e3a2066 756e6374 696f6e20 28696e64 65782c20 78706174 6829207b 0a202020 20726574 75726e20 74686973 2e66696e 64587061 74685265 6c617469 7665546f 28746869 732e6e6f 6465735b 696e6465 785d2c20 78706174 68293b0a 20207d2c 0a0a2020 66696e64 43737357 69746869 6e3a2066 756e6374 696f6e20 28696e64 65782c20 73656c65 63746f72 29207b0a 20202020 72657475 726e2074 6869732e 66696e64 43737352 656c6174 69766554 6f287468 69732e6e 6f646573 5b696e64 65785d2c 2073656c 6563746f 72293b0a 20207d2c 0a0a2020 66696e64 58706174 6852656c 61746976 65546f3a 2066756e 6374696f 6e202872 65666572 656e6365 2c207870 61746829 207b0a20 20202076 61722069 74657261 746f7220 3d20646f 63756d65 6e742e65 76616c75 61746528 78706174 682c2072 65666572 656e6365 2c206e75 6c6c2c20 58506174 68526573 756c742e 4f524445 5245445f 4e4f4445 5f495445 5241544f 525f5459 50452c20 6e756c6c 293b0a20 20202076 6172206e 6f64653b 0a202020 20766172 20726573 756c7473 203d205b 5d3b0a20 20202077 68696c65 20286e6f 6465203d 20697465 7261746f 722e6974 65726174 654e6578 74282929 207b0a20 20202020 20746869 732e6e65 7874496e 6465782b 2b3b0a20 20202020 20746869 732e6e6f 6465735b 74686973 2e6e6578 74496e64 65785d20 3d206e6f 64653b0a 20202020 20207265 73756c74 732e7075 73682874 6869732e 6e657874 496e6465 78293b0a 20202020 7d0a2020 20207265 7475726e 20726573 756c7473 2e6a6f69 6e28222c 22293b0a 20207d2c 0a0a2020 66696e64 43737352 656c6174 69766554 6f3a2066 756e6374 696f6e20 28726566 6572656e 63652c20 73656c65 63746f72 29207b0a 20202020 76617220 656c656d 656e7473 203d2072 65666572 656e6365 2e717565 72795365 6c656374 6f72416c 6c287365 6c656374 6f72293b 0a202020 20766172 20726573 756c7473 203d205b 5d3b0a20 20202066 6f722028 76617220 69203d20 303b2069 203c2065 6c656d65 6e74732e 6c656e67 74683b20 692b2b29 207b0a20 20202020 20746869 732e6e65 7874496e 6465782b 2b3b0a20 20202020 20746869 732e6e6f 6465735b 74686973 2e6e6578 74496e64 65785d20 3d20656c 656d656e 74735b69 5d3b0a20 20202020 20726573 756c7473 2e707573 68287468 69732e6e 65787449 6e646578 293b0a20 2020207d 0a202020 20726574 75726e20 72657375 6c74732e 6a6f696e 28222c22 293b0a20 207d2c0a 0a202069 73417474 61636865 643a2066 756e6374 696f6e28 696e6465 7829207b 0a202020 20726574 75726e20 74686973 2e6e6f64 65735b69 6e646578 5d202626 0a202020 20202064 6f63756d 656e742e 6576616c 75617465 2822616e 63657374 6f722d6f 722d7365 6c663a3a 68746d6c 222c2074 6869732e 6e6f6465 735b696e 6465785d 2c206e75 6c6c2c20 58506174 68526573 756c742e 46495253 545f4f52 44455245 445f4e4f 44455f54 5950452c 206e756c 6c292e73 696e676c 654e6f64 6556616c 75652021 3d206e75 6c6c3b0a 20207d2c 0a0a2020 74657874 3a206675 6e637469 6f6e2028 696e6465 7829207b 0a202020 20766172 206e6f64 65203d20 74686973 2e6e6f64 65735b69 6e646578 5d3b0a20 20202076 61722074 79706520 3d20286e 6f64652e 74797065 207c7c20 6e6f6465 2e746167 4e616d65 292e746f 4c6f7765 72436173 6528293b 0a202020 20696620 28747970 65203d3d 20227465 78746172 65612229 207b0a20 20202020 20726574 75726e20 6e6f6465 2e696e6e 65724854 4d4c3b0a 20202020 7d20656c 7365207b 0a202020 20202072 65747572 6e206e6f 64652e69 6e6e6572 54657874 207c7c20 6e6f6465 2e746578 74436f6e 74656e74 3b0a2020 20207d0a 20207d2c 0a0a2020 616c6c54 6578743a 2066756e 6374696f 6e202869 6e646578 29207b0a 20202020 76617220 6e6f6465 203d2074 6869732e 6e6f6465 735b696e 6465785d 3b0a2020 20207265 7475726e 206e6f64 652e7465 7874436f 6e74656e 743b0a20 207d2c0a 0a202061 74747269 62757465 3a206675 6e637469 6f6e2028 696e6465 782c206e 616d6529 207b0a20 20202073 77697463 68286e61 6d652920 7b0a2020 20206361 73652027 63686563 6b656427 3a0a2020 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e636865 636b6564 3b0a2020 20202020 62726561 6b3b0a0a 20202020 63617365 20276469 7361626c 6564273a 0a202020 20202072 65747572 6e207468 69732e6e 6f646573 5b696e64 65785d2e 64697361 626c6564 3b0a2020 20202020 62726561 6b3b0a0a 20202020 63617365 20276d75 6c746970 6c65273a 0a202020 20202072 65747572 6e207468 69732e6e 6f646573 5b696e64 65785d2e 6d756c74 69706c65 3b0a2020 20202020 62726561 6b3b0a0a 20202020 64656661 756c743a 0a202020 20202072 65747572 6e207468 69732e6e 6f646573 5b696e64 65785d2e 67657441 74747269 62757465 286e616d 65293b0a 20202020 7d0a2020 7d2c0a0a 20206861 73417474 72696275 74653a20 66756e63 74696f6e 28696e64 65782c20 6e616d65 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e686173 41747472 69627574 65286e61 6d65293b 0a20207d 2c0a0a20 20706174 683a2066 756e6374 696f6e28 696e6465 7829207b 0a202020 20726574 75726e20 222f2220 2b207468 69732e67 65745850 6174684e 6f646528 74686973 2e6e6f64 65735b69 6e646578 5d292e6a 6f696e28 222f2229 3b0a2020 7d2c0a0a 20206765 74585061 74684e6f 64653a20 66756e63 74696f6e 286e6f64 652c2070 61746829 207b0a20 20202070 61746820 3d207061 7468207c 7c205b5d 3b0a2020 20206966 20286e6f 64652e70 6172656e 744e6f64 6529207b 0a202020 20202070 61746820 3d207468 69732e67 65745850 6174684e 6f646528 6e6f6465 2e706172 656e744e 6f64652c 20706174 68293b0a 20202020 7d0a0a20 20202076 61722066 69727374 203d206e 6f64653b 0a202020 20776869 6c652028 66697273 742e7072 6576696f 75735369 626c696e 67290a20 20202020 20666972 7374203d 20666972 73742e70 72657669 6f757353 69626c69 6e673b0a 0a202020 20766172 20636f75 6e74203d 20303b0a 20202020 76617220 696e6465 78203d20 303b0a20 20202076 61722069 74657220 3d206669 7273743b 0a202020 20776869 6c652028 69746572 29207b0a 20202020 20206966 20286974 65722e6e 6f646554 79706520 3d3d2031 20262620 69746572 2e6e6f64 654e616d 65203d3d 206e6f64 652e6e6f 64654e61 6d65290a 20202020 20202020 636f756e 742b2b3b 0a202020 20202069 66202869 7465722e 69735361 6d654e6f 6465286e 6f646529 290a2020 20202020 20202069 6e646578 203d2063 6f756e74 3b0a2020 20202020 69746572 203d2069 7465722e 6e657874 5369626c 696e673b 0a202020 20202063 6f6e7469 6e75653b 0a202020 207d0a0a 20202020 69662028 6e6f6465 2e6e6f64 65547970 65203d3d 2031290a 20202020 20207061 74682e70 75736828 6e6f6465 2e6e6f64 654e616d 652e746f 4c6f7765 72436173 65282920 2b20286e 6f64652e 6964203f 20225b40 69643d27 222b6e6f 64652e69 642b2227 5d22203a 20636f75 6e74203e 2031203f 20225b22 2b696e64 65782b22 5d22203a 20272729 293b0a0a 20202020 72657475 726e2070 6174683b 0a20207d 2c0a0a20 20746167 4e616d65 3a206675 6e637469 6f6e2869 6e646578 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e746167 4e616d65 2e746f4c 6f776572 43617365 28293b0a 20207d2c 0a0a2020 7375626d 69743a20 66756e63 74696f6e 28696e64 65782920 7b0a2020 20207265 7475726e 20746869 732e6e6f 6465735b 696e6465 785d2e73 75626d69 7428293b 0a20207d 2c0a0a20 20636c69 636b5465 73743a20 66756e63 74696f6e 286e6f64 652c2070 6f732920 7b0a2020 20207661 7220656c 203d2064 6f63756d 656e742e 656c656d 656e7446 726f6d50 6f696e74 28706f73 2e72656c 61746976 65582c20 706f732e 72656c61 74697665 59293b0a 0a202020 20776869 6c652028 656c2920 7b0a2020 20202020 69662028 656c203d 3d3d206e 6f646529 0a202020 20202020 20726574 75726e20 43617079 62617261 496e766f 63617469 6f6e2e63 6c69636b 54657374 286e6f64 652c2070 6f732e61 62736f6c 75746558 2c20706f 732e6162 736f6c75 74655929 3b0a2020 20202020 656c7365 0a202020 20202020 20656c20 3d20656c 2e706172 656e744e 6f64653b 0a202020 207d0a0a 20202020 72657475 726e2066 616c7365 3b0a2020 7d2c0a0a 2020636c 69636b50 6f736974 696f6e3a 2066756e 6374696f 6e286e6f 64652920 7b0a2020 20207661 72207265 63747320 3d206e6f 64652e67 6574436c 69656e74 52656374 7328293b 0a202020 20766172 20726563 743b0a0a 20202020 666f7220 28766172 2069203d 20303b20 69203c20 72656374 732e6c65 6e677468 3b20692b 2b29207b 0a202020 20202072 65637420 3d207265 6374735b 695d3b0a 20202020 20206966 20287265 63742e77 69647468 203e2030 20262620 72656374 2e686569 67687420 3e203029 0a202020 20202020 20726574 75726e20 43617079 62617261 496e766f 63617469 6f6e2e63 6c69636b 506f7369 74696f6e 286e6f64 652c2072 6563742e 6c656674 2c207265 63742e74 6f702c20 72656374 2e776964 74682c20 72656374 2e686569 67687429 3b0a2020 20207d0a 20207d2c 0a0a2020 636c6963 6b3a2066 756e6374 696f6e20 28696e64 65782c20 61637469 6f6e2920 7b0a2020 20207661 72206e6f 6465203d 20746869 732e6e6f 6465735b 696e6465 785d3b0a 20202020 6e6f6465 2e736372 6f6c6c49 6e746f56 69657749 664e6565 64656428 293b0a0a 20202020 76617220 706f7320 3d207468 69732e63 6c69636b 506f7369 74696f6e 286e6f64 65293b0a 0a202020 20696620 28706f73 20262620 74686973 2e636c69 636b5465 7374286e 6f64652c 20706f73 29290a20 20202020 20616374 696f6e28 706f732e 6162736f 6c757465 582c2070 6f732e61 62736f6c 75746559 293b0a20 20202065 6c73650a 20202020 20207468 726f7720 6e657720 43617079 62617261 2e436c69 636b4661 696c6564 28746869 732e7061 74682869 6e646578 292c2070 6f73293b 0a20207d 2c0a0a20 206c6566 74436c69 636b3a20 66756e63 74696f6e 2028696e 64657829 207b0a20 20202074 6869732e 636c6963 6b28696e 6465782c 20436170 79626172 61496e76 6f636174 696f6e2e 6c656674 436c6963 6b293b0a 20207d2c 0a0a2020 646f7562 6c65436c 69636b3a 2066756e 6374696f 6e28696e 64657829 207b0a20 20202074 6869732e 636c6963 6b28696e 6465782c 20436170 79626172 61496e76 6f636174 696f6e2e 6c656674 436c6963 6b293b0a 20202020 74686973 2e636c69 636b2869 6e646578 2c204361 70796261 7261496e 766f6361 74696f6e 2e646f75 626c6543 6c69636b 293b0a20 207d2c0a 0a202072 69676874 436c6963 6b3a2066 756e6374 696f6e28 696e6465 7829207b 0a202020 20746869 732e636c 69636b28 696e6465 782c2043 61707962 61726149 6e766f63 6174696f 6e2e7269 67687443 6c69636b 293b0a20 207d2c0a 0a202068 6f766572 3a206675 6e637469 6f6e2028 696e6465 7829207b 0a202020 20766172 206e6f64 65203d20 74686973 2e6e6f64 65735b69 6e646578 5d3b0a20 2020206e 6f64652e 7363726f 6c6c496e 746f5669 65774966 4e656564 65642829 3b0a0a20 20202076 61722070 6f73203d 20746869 732e636c 69636b50 6f736974 696f6e28 6e6f6465 293b0a20 20202069 66202870 6f73290a 20202020 20204361 70796261 7261496e 766f6361 74696f6e 2e686f76 65722870 6f732e61 62736f6c 75746558 2c20706f 732e6162 736f6c75 74655929 3b0a2020 7d2c0a0a 20207472 69676765 723a2066 756e6374 696f6e20 28696e64 65782c20 6576656e 744e616d 6529207b 0a202020 20766172 20657665 6e744f62 6a656374 203d2064 6f63756d 656e742e 63726561 74654576 656e7428 2248544d 4c457665 6e747322 293b0a20 20202065 76656e74 4f626a65 63742e69 6e697445 76656e74 28657665 6e744e61 6d652c20 74727565 2c207472 7565293b 0a202020 20746869 732e6e6f 6465735b 696e6465 785d2e64 69737061 74636845 76656e74 28657665 6e744f62 6a656374 293b0a20 207d2c0a 0a202076 69736962 6c653a20 66756e63 74696f6e 2028696e 64657829 207b0a20 20202076 61722065 6c656d65 6e74203d 20746869 732e6e6f 6465735b 696e6465 785d3b0a 20202020 7768696c 65202865 6c656d65 6e742920 7b0a2020 20202020 76617220 7374796c 65203d20 656c656d 656e742e 6f776e65 72446f63 756d656e 742e6465 6661756c 74566965 772e6765 74436f6d 70757465 64537479 6c652865 6c656d65 6e742c20 6e756c6c 293b0a20 20202020 20696620 28737479 6c652e67 65745072 6f706572 74795661 6c756528 22646973 706c6179 2229203d 3d20276e 6f6e6527 207c7c20 7374796c 652e6765 7450726f 70657274 7956616c 75652822 76697369 62696c69 74792229 203d3d20 27686964 64656e27 290a2020 20202020 20207265 7475726e 2066616c 73653b0a 0a202020 20202065 6c656d65 6e74203d 20656c65 6d656e74 2e706172 656e7445 6c656d65 6e743b0a 20202020 7d0a2020 20207265 7475726e 20747275 653b0a20 207d2c0a 0a202073 656c6563 7465643a 2066756e 6374696f 6e202869 6e646578 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e73656c 65637465 643b0a20 207d2c0a 0a202076 616c7565 3a206675 6e637469 6f6e2869 6e646578 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e76616c 75653b0a 20207d2c 0a0a2020 67657449 6e6e6572 48544d4c 3a206675 6e637469 6f6e2869 6e646578 29207b0a 20202020 72657475 726e2074 6869732e 6e6f6465 735b696e 6465785d 2e696e6e 65724854 4d4c3b0a 20207d2c 0a0a2020 73657449 6e6e6572 48544d4c 3a206675 6e637469 6f6e2869 6e646578 2c207661 6c756529 207b0a20 20202074 6869732e 6e6f6465 735b696e 6465785d 2e696e6e 65724854 4d4c203d 2076616c 75653b0a 20202020 72657475 726e2074 7275653b 0a20207d 2c0a0a20 20736574 3a206675 6e637469 6f6e2028 696e6465 782c2076 616c7565 29207b0a 20202020 76617220 6c656e67 74682c20 6d61784c 656e6774 682c206e 6f64652c 20737472 696e6465 782c2074 65787454 79706573 2c207479 70653b0a 0a202020 206e6f64 65203d20 74686973 2e6e6f64 65735b69 6e646578 5d3b0a20 20202074 79706520 3d20286e 6f64652e 74797065 207c7c20 6e6f6465 2e746167 4e616d65 292e746f 4c6f7765 72436173 6528293b 0a202020 20746578 74547970 6573203d 205b2265 6d61696c 222c2022 6e756d62 6572222c 20227061 7373776f 7264222c 20227365 61726368 222c2022 74656c22 2c202274 65787422 2c202274 65787461 72656122 2c202275 726c225d 3b0a0a20 20202069 66202874 65787454 79706573 2e696e64 65784f66 28747970 65292021 3d202d31 29207b0a 20202020 20207468 69732e66 6f637573 28696e64 6578293b 0a0a2020 20202020 6d61784c 656e6774 68203d20 74686973 2e617474 72696275 74652869 6e646578 2c20226d 61786c65 6e677468 22293b0a 20202020 20206966 20286d61 784c656e 67746820 26262076 616c7565 2e6c656e 67746820 3e206d61 784c656e 67746829 207b0a20 20202020 2020206c 656e6774 68203d20 6d61784c 656e6774 683b0a20 20202020 207d2065 6c736520 7b0a2020 20202020 20206c65 6e677468 203d2076 616c7565 2e6c656e 6774683b 0a202020 2020207d 0a0a2020 20202020 69662028 216e6f64 652e7265 61644f6e 6c79290a 20202020 20202020 6e6f6465 2e76616c 7565203d 2022223b 0a0a2020 20202020 666f7220 28737472 696e6465 78203d20 303b2073 7472696e 64657820 3c206c65 6e677468 3b207374 72696e64 65782b2b 29207b0a 20202020 20202020 43617079 62617261 496e766f 63617469 6f6e2e6b 65797072 65737328 76616c75 655b7374 72696e64 65785d29 3b0a2020 20202020 7d0a0a20 2020207d 20656c73 65206966 20287479 7065203d 3d3d2022 63686563 6b626f78 22207c7c 20747970 65203d3d 3d202272 6164696f 2229207b 0a202020 20202069 6620286e 6f64652e 63686563 6b656420 213d2028 76616c75 65203d3d 3d202274 72756522 2929207b 0a202020 20202020 20746869 732e6c65 6674436c 69636b28 696e6465 78293b0a 20202020 20207d0a 0a202020 207d2065 6c736520 69662028 74797065 203d3d3d 20226669 6c652229 207b0a20 20202020 20746869 732e6174 74616368 65644669 6c657320 3d204172 7261792e 70726f74 6f747970 652e736c 6963652e 63616c6c 28617267 756d656e 74732c20 31293b0a 20202020 20207468 69732e6c 65667443 6c69636b 28696e64 6578293b 0a0a2020 20207d20 656c7365 207b0a20 20202020 206e6f64 652e7661 6c756520 3d207661 6c75653b 0a202020 207d0a20 207d2c0a 0a202066 6f637573 3a206675 6e637469 6f6e2869 6e646578 29207b0a 20202020 74686973 2e6e6f64 65735b69 6e646578 5d2e666f 63757328 293b0a20 207d2c0a 0a202073 656c6563 744f7074 696f6e3a 2066756e 6374696f 6e28696e 64657829 207b0a20 20202074 6869732e 6e6f6465 735b696e 6465785d 2e73656c 65637465 64203d20 74727565 3b0a2020 20207468 69732e74 72696767 65722869 6e646578 2c202263 68616e67 6522293b 0a20207d 2c0a0a20 20756e73 656c6563 744f7074 696f6e3a 2066756e 6374696f 6e28696e 64657829 207b0a20 20202074 6869732e 6e6f6465 735b696e 6465785d 2e73656c 65637465 64203d20 66616c73 653b0a20 20202074 6869732e 74726967 67657228 696e6465 782c2022 6368616e 67652229 3b0a2020 7d2c0a0a 20206365 6e746572 506f7369 74696f6e 3a206675 6e637469 6f6e2865 6c656d65 6e742920 7b0a2020 20207468 69732e72 65666c6f 7728656c 656d656e 74293b0a 20202020 76617220 72656374 203d2065 6c656d65 6e742e67 6574426f 756e6469 6e67436c 69656e74 52656374 28293b0a 20202020 76617220 706f7369 74696f6e 203d207b 0a202020 20202078 3a207265 63742e77 69647468 202f2032 2c0a2020 20202020 793a2072 6563742e 68656967 6874202f 20320a20 2020207d 3b0a2020 2020646f 207b0a20 20202020 20202070 6f736974 696f6e2e 78202b3d 20656c65 6d656e74 2e6f6666 7365744c 6566743b 0a202020 20202020 20706f73 6974696f 6e2e7920 2b3d2065 6c656d65 6e742e6f 66667365 74546f70 3b0a2020 20207d20 7768696c 65202828 656c656d 656e7420 3d20656c 656d656e 742e6f66 66736574 50617265 6e742929 3b0a2020 2020706f 73697469 6f6e2e78 203d204d 6174682e 666c6f6f 7228706f 73697469 6f6e2e78 293b0a20 20202070 6f736974 696f6e2e 79203d20 4d617468 2e666c6f 6f722870 6f736974 696f6e2e 79293b0a 0a202020 20726574 75726e20 706f7369 74696f6e 3b0a2020 7d2c0a0a 20207265 666c6f77 3a206675 6e637469 6f6e2865 6c656d65 6e742c20 666f7263 6529207b 0a202020 20696620 28666f72 6365207c 7c20656c 656d656e 742e6f66 66736574 57696474 68203d3d 3d203029 207b0a20 20202020 20766172 2070726f 702c206f 6c645374 796c6520 3d207b7d 2c206e65 77537479 6c65203d 207b706f 73697469 6f6e3a20 22616273 6f6c7574 65222c20 76697369 62696c69 7479203a 20226869 6464656e 222c2064 6973706c 61793a20 22626c6f 636b2220 7d3b0a20 20202020 20666f72 20287072 6f702069 6e206e65 77537479 6c652920 207b0a20 20202020 2020206f 6c645374 796c655b 70726f70 5d203d20 656c656d 656e742e 7374796c 655b7072 6f705d3b 0a202020 20202020 20656c65 6d656e74 2e737479 6c655b70 726f705d 203d206e 65775374 796c655b 70726f70 5d3b0a20 20202020 207d0a20 20202020 202f2f20 666f7263 65207265 666c6f77 0a202020 20202065 6c656d65 6e742e6f 66667365 74576964 74683b0a 20202020 2020656c 656d656e 742e6f66 66736574 48656967 68743b0a 20202020 2020666f 72202870 726f7020 696e206f 6c645374 796c6529 0a202020 20202020 20656c65 6d656e74 2e737479 6c655b70 726f705d 203d206f 6c645374 796c655b 70726f70 5d3b0a20 2020207d 0a20207d 2c0a0a20 20647261 67546f3a 2066756e 6374696f 6e202869 6e646578 2c207461 72676574 496e6465 7829207b 0a202020 20766172 20656c65 6d656e74 203d2074 6869732e 6e6f6465 735b696e 6465785d 2c207461 72676574 203d2074 6869732e 6e6f6465 735b7461 72676574 496e6465 785d3b0a 20202020 76617220 706f7369 74696f6e 203d2074 6869732e 63656e74 6572506f 73697469 6f6e2865 6c656d65 6e74293b 0a202020 20766172 206f7074 696f6e73 203d207b 0a202020 20202063 6c69656e 74583a20 706f7369 74696f6e 2e782c0a 20202020 2020636c 69656e74 593a2070 6f736974 696f6e2e 790a2020 20207d3b 0a202020 20766172 206d6f75 73655472 69676765 72203d20 66756e63 74696f6e 28657665 6e744e61 6d652c20 6f707469 6f6e7329 207b0a20 20202020 20766172 20657665 6e744f62 6a656374 203d2064 6f63756d 656e742e 63726561 74654576 656e7428 224d6f75 73654576 656e7473 22293b0a 20202020 20206576 656e744f 626a6563 742e696e 69744d6f 75736545 76656e74 28657665 6e744e61 6d652c20 74727565 2c207472 75652c20 77696e64 6f772c20 302c2030 2c20302c 206f7074 696f6e73 2e636c69 656e7458 207c7c20 302c206f 7074696f 6e732e63 6c69656e 7459207c 7c20302c 2066616c 73652c20 66616c73 652c2066 616c7365 2c206661 6c73652c 20302c20 6e756c6c 293b0a20 20202020 20656c65 6d656e74 2e646973 70617463 68457665 6e742865 76656e74 4f626a65 6374293b 0a202020 207d3b0a 20202020 6d6f7573 65547269 67676572 28276d6f 75736564 6f776e27 2c206f70 74696f6e 73293b0a 20202020 6f707469 6f6e732e 636c6965 6e745820 2b3d2031 3b0a2020 20206f70 74696f6e 732e636c 69656e74 59202b3d 20313b0a 20202020 6d6f7573 65547269 67676572 28276d6f 7573656d 6f766527 2c206f70 74696f6e 73293b0a 0a202020 20706f73 6974696f 6e203d20 74686973 2e63656e 74657250 6f736974 696f6e28 74617267 6574293b 0a202020 206f7074 696f6e73 203d207b 0a202020 20202063 6c69656e 74583a20 706f7369 74696f6e 2e782c0a 20202020 2020636c 69656e74 593a2070 6f736974 696f6e2e 790a2020 20207d3b 0a202020 206d6f75 73655472 69676765 7228276d 6f757365 6d6f7665 272c206f 7074696f 6e73293b 0a202020 206d6f75 73655472 69676765 7228276d 6f757365 7570272c 206f7074 696f6e73 293b0a20 207d2c0a 0a202065 7175616c 733a2066 756e6374 696f6e28 696e6465 782c2074 61726765 74496e64 65782920 7b0a2020 20207265 7475726e 20746869 732e6e6f 6465735b 696e6465 785d203d 3d3d2074 6869732e 6e6f6465 735b7461 72676574 496e6465 785d3b0a 20207d0a 7d3b0a0a 43617079 62617261 2e436c69 636b4661 696c6564 203d2066 756e6374 696f6e28 70617468 2c20706f 73697469 6f6e2920 7b0a2020 74686973 2e6e616d 65203d20 27436170 79626172 612e436c 69636b46 61696c65 64273b0a 20207468 69732e6d 65737361 6765203d 20274661 696c6564 20746f20 636c6963 6b20656c 656d656e 74202720 2b207061 74683b0a 20206966 2028706f 73697469 6f6e290a 20202020 74686973 2e6d6573 73616765 202b3d20 27206174 20706f73 6974696f 6e202720 2b20706f 73697469 6f6e5b22 6162736f 6c757465 58225d20 2b20272c 2027202b 20706f73 6974696f 6e5b2261 62736f6c 75746559 225d3b0a 2020656c 73650a20 20202074 6869732e 6d657373 61676520 2b3d2027 20617420 756e6b6e 6f776e20 706f7369 74696f6e 273b0a7d 3b0a4361 70796261 72612e43 6c69636b 4661696c 65642e70 726f746f 74797065 203d206e 65772045 72726f72 28293b0a 43617079 62617261 2e436c69 636b4661 696c6564 2e70726f 746f7479 70652e63 6f6e7374 72756374 6f72203d 20436170 79626172 612e436c 69636b46 61696c65 643b0a>
2013-06-28 01:02:46.647 capybara-touch[40028:c07] ================> Capybara = {
  nextIndex: 0,
  nodes: {},
  attachedFiles: [],

  invoke: function () {
    try {
      return this[CapybaraInvocation.functionName].apply(this, CapybaraInvocation.arguments);
    } catch (e) {
      CapybaraInvocation.error = e;
    }
  },

  findXpath: function (xpath) {
    return this.findXpathRelativeTo(document, xpath);
  },

  findCss: function (selector) {
    return this.findCssRelativeTo(document, selector);
  },

  findXpathWithin: function (index, xpath) {
    return this.findXpathRelativeTo(this.nodes[index], xpath);
  },

  findCssWithin: function (index, selector) {
    return this.findCssRelativeTo(this.nodes[index], selector);
  },

  findXpathRelativeTo: function (reference, xpath) {
    var iterator = document.evaluate(xpath, reference, null, XPathResult.ORDERED_NODE_ITERATOR_TYPE, null);
    var node;
    var results = [];
    while (node = iterator.iterateNext()) {
      this.nextIndex++;
      this.nodes[this.nextIndex] = node;
      results.push(this.nextIndex);
    }
    return results.join(",");
  },

  findCssRelativeTo: function (reference, selector) {
    var elements = reference.querySelectorAll(selector);
    var results = [];
    for (var i = 0; i < elements.length; i++) {
      this.nextIndex++;
      this.nodes[this.nextIndex] = elements[i];
      results.push(this.nextIndex);
    }
    return results.join(",");
  },

  isAttached: function(index) {
    return this.nodes[index] &&
      document.evaluate("ancestor-or-self::html", this.nodes[index], null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue != null;
  },

  text: function (index) {
    var node = this.nodes[index];
    var type = (node.type || node.tagName).toLowerCase();
    if (type == "textarea") {
      return node.innerHTML;
    } else {
      return node.innerText || node.textContent;
    }
  },

  allText: function (index) {
    var node = this.nodes[index];
    return node.textContent;
  },

  attribute: function (index, name) {
    switch(name) {
    case 'checked':
      return this.nodes[index].checked;
      break;

    case 'disabled':
      return this.nodes[index].disabled;
      break;

    case 'multiple':
      return this.nodes[index].multiple;
      break;

    default:
      return this.nodes[index].getAttribute(name);
    }
  },

  hasAttribute: function(index, name) {
    return this.nodes[index].hasAttribute(name);
  },

  path: function(index) {
    return "/" + this.getXPathNode(this.nodes[index]).join("/");
  },

  getXPathNode: function(node, path) {
    path = path || [];
    if (node.parentNode) {
      path = this.getXPathNode(node.parentNode, path);
    }

    var first = node;
    while (first.previousSibling)
      first = first.previousSibling;

    var count = 0;
    var index = 0;
    var iter = first;
    while (iter) {
      if (iter.nodeType == 1 && iter.nodeName == node.nodeName)
        count++;
      if (iter.isSameNode(node))
         index = count;
      iter = iter.nextSibling;
      continue;
    }

    if (node.nodeType == 1)
      path.push(node.nodeName.toLowerCase() + (node.id ? "[@id='"+node.id+"']" : count > 1 ? "["+index+"]" : ''));

    return path;
  },

  tagName: function(index) {
    return this.nodes[index].tagName.toLowerCase();
  },

  submit: function(index) {
    return this.nodes[index].submit();
  },

  clickTest: function(node, pos) {
    var el = document.elementFromPoint(pos.relativeX, pos.relativeY);

    while (el) {
      if (el === node)
        return CapybaraInvocation.clickTest(node, pos.absoluteX, pos.absoluteY);
      else
        el = el.parentNode;
    }

    return false;
  },

  clickPosition: function(node) {
    var rects = node.getClientRects();
    var rect;

    for (var i = 0; i < rects.length; i++) {
      rect = rects[i];
      if (rect.width > 0 && rect.height > 0)
        return CapybaraInvocation.clickPosition(node, rect.left, rect.top, rect.width, rect.height);
    }
  },

  click: function (index, action) {
    var node = this.nodes[index];
    node.scrollIntoViewIfNeeded();

    var pos = this.clickPosition(node);

    if (pos && this.clickTest(node, pos))
      action(pos.absoluteX, pos.absoluteY);
    else
      throw new Capybara.ClickFailed(this.path(index), pos);
  },

  leftClick: function (index) {
    this.click(index, CapybaraInvocation.leftClick);
  },

  doubleClick: function(index) {
    this.click(index, CapybaraInvocation.leftClick);
    this.click(index, CapybaraInvocation.doubleClick);
  },

  rightClick: function(index) {
    this.click(index, CapybaraInvocation.rightClick);
  },

  hover: function (index) {
    var node = this.nodes[index];
    node.scrollIntoViewIfNeeded();

    var pos = this.clickPosition(node);
    if (pos)
      CapybaraInvocation.hover(pos.absoluteX, pos.absoluteY);
  },

  trigger: function (index, eventName) {
    var eventObject = document.createEvent("HTMLEvents");
    eventObject.initEvent(eventName, true, true);
    this.nodes[index].dispatchEvent(eventObject);
  },

  visible: function (index) {
    var element = this.nodes[index];
    while (element) {
      var style = element.ownerDocument.defaultView.getComputedStyle(element, null);
      if (style.getPropertyValue("display") == 'none' || style.getPropertyValue("visibility") == 'hidden')
        return false;

      element = element.parentElement;
    }
    return true;
  },

  selected: function (index) {
    return this.nodes[index].selected;
  },

  value: function(index) {
    return this.nodes[index].value;
  },

  getInnerHTML: function(index) {
    return this.nodes[index].innerHTML;
  },

  setInnerHTML: function(index, value) {
    this.nodes[index].innerHTML = value;
    return true;
  },

  set: function (index, value) {
    var length, maxLength, node, strindex, textTypes, type;

    node = this.nodes[index];
    type = (node.type || node.tagName).toLowerCase();
    textTypes = ["email", "number", "password", "search", "tel", "text", "textarea", "url"];

    if (textTypes.indexOf(type) != -1) {
      this.focus(index);

      maxLength = this.attribute(index, "maxlength");
      if (maxLength && value.length > maxLength) {
        length = maxLength;
      } else {
        length = value.length;
      }

      if (!node.readOnly)
        node.value = "";

      for (strindex = 0; strindex < length; strindex++) {
        CapybaraInvocation.keypress(value[strindex]);
      }

    } else if (type === "checkbox" || type === "radio") {
      if (node.checked != (value === "true")) {
        this.leftClick(index);
      }

    } else if (type === "file") {
      this.attachedFiles = Array.prototype.slice.call(arguments, 1);
      this.leftClick(index);

    } else {
      node.value = value;
    }
  },

  focus: function(index) {
    this.nodes[index].focus();
  },

  selectOption: function(index) {
    this.nodes[index].selected = true;
    this.trigger(index, "change");
  },

  unselectOption: function(index) {
    this.nodes[index].selected = false;
    this.trigger(index, "change");
  },

  centerPosition: function(element) {
    this.reflow(element);
    var rect = element.getBoundingClientRect();
    var position = {
      x: rect.width / 2,
      y: rect.height / 2
    };
    do {
        position.x += element.offsetLeft;
        position.y += element.offsetTop;
    } while ((element = element.offsetParent));
    position.x = Math.floor(position.x);
    position.y = Math.floor(position.y);

    return position;
  },

  reflow: function(element, force) {
    if (force || element.offsetWidth === 0) {
      var prop, oldStyle = {}, newStyle = {position: "absolute", visibility : "hidden", display: "block" };
      for (prop in newStyle)  {
        oldStyle[prop] = element.style[prop];
        element.style[prop] = newStyle[prop];
      }
      // force reflow
      element.offsetWidth;
      element.offsetHeight;
      for (prop in oldStyle)
        element.style[prop] = oldStyle[prop];
    }
  },

  dragTo: function (index, targetIndex) {
    var element = this.nodes[index], target = this.nodes[targetIndex];
    var position = this.centerPosition(element);
    var options = {
      clientX: position.x,
      clientY: position.y
    };
    var mouseTrigger = function(eventName, options) {
      var eventObject = document.createEvent("MouseEvents");
      eventObject.initMouseEvent(eventName, true, true, window, 0, 0, 0, options.clientX || 0, options.clientY || 0, false, false, false, false, 0, null);
      element.dispatchEvent(eventObject);
    };
    mouseTrigger('mousedown', options);
    options.clientX += 1;
    options.clientY += 1;
    mouseTrigger('mousemove', options);

    position = this.centerPosition(target);
    options = {
      clientX: position.x,
      clientY: position.y
    };
    mouseTrigger('mousemove', options);
    mouseTrigger('mouseup', options);
  },

  equals: function(index, targetIndex) {
    return this.nodes[index] === this.nodes[targetIndex];
  }
};

Capybara.ClickFailed = function(path, position) {
  this.name = 'Capybara.ClickFailed';
  this.message = 'Failed to click element ' + path;
  if (position)
    this.message += ' at position ' + position["absoluteX"] + ', ' + position["absoluteY"];
  else
    this.message += ' at unknown position';
};
Capybara.ClickFailed.prototype = new Error();
Capybara.ClickFailed.prototype.constructor = Capybara.ClickFailed;
2013-06-28 01:02:46.649 capybara-touch[40028:c07] ================> HI MOM
2013-06-28 01:02:46.651 capybara-touch[40028:c07] ================> function (path, position) {
  this.name = 'Capybara.ClickFailed';
  this.message = 'Failed to click element ' + path;
  if (position)
    this.message += ' at position ' + position["absoluteX"] + ', ' + position["absoluteY"];
  else
    this.message += ' at unknown position';
}
2013-06-28 01:02:46.652 capybara-touch[40028:c07] listening on port: 9292
